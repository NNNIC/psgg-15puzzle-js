;PSGG Editor Backup File
version=1.1
file=CreatePanelsControl.xlsx
guid=a7e00d9d-8650-4495-a1cb-7e88de8b22e1
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n005,n006,,n007,n008,,n009,n00a,n00b,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,,n014,n015,n016,n017,,n018,n019,n01a
stateid_list=,,,,s0001,s0002,s0003,s0004,s0005,s0006,s0007,s0008,s0009,s000a,s000b,s000c,s000d,s000e,s000f,s0010,s0011,s0012,s0013
max_name_id=26
max_state_id=19
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=basestate
n006=nextstate
n007=data
n008=embed
n009=members
n00a=vars
n00b=init
n00c=init-cmt
n00d=init-ref
n00e=update
n00f=update-cmt
n010=wait
n011=wait-cmt
n012=post_wait
n013=post_wait-cmt
n014=branch
n015=branch-cmt
n016=brcond
n017=nowait
n018=!dir
n019=!pos
n01a=!uuid


[id_state_dic]
s0001=S_START
s0002=S_END
s0003=S_CREATE_BUTTON1
s0004=S_SET_DATA
s0005=S_FORINIT
s0006=S_GET_ITEM
s0007=S_FORNEXT
s0008=S_LOADTEX
s0009=S_CREATE_PANELS
s000a=S_WAIT_REQ
s000b=S_CB
s000c=S_LOAD_BBTEX
s000d=S_LOAD_TEXTUREX
s000e=S_WAIT_REQ1
s000f=S_CREATE_BACKBOARD
s0010=S_SET_MAPINFO
s0011=S_LOAD_TOCHTEX
s0012=S_VAR_TOUCHTEX
s0013=S_CREATE_TOUCHCOL


[s0001]
n002=S_START
n004=MainControl
n006=S_WAIT_REQ1
n018=@@@
/
(100,100)
This is the root
@@@

n019=22,15
n01a=100001

[s0002]
n001=(bitmap)
n002=S_END
n00b=console.log("END");
n018=@@@
/
(100,100)
This is the root
@@@

n019=2346,519
n01a=100002

[s0003]
n001=(bitmap)
n002=S_CREATE_BUTTON1
n006=S_END
n009=this.box = null;
n00b=@@@
this.box = new THREE.Mesh(
    new THREE.PlaneGeometry(128, 128),
    new THREE.MeshBasicMaterial({map: this.texture})  // {map: texture}がキモ
);
//this.box.position.set(50, G.height - 50, 0);
this.box.name = "P1.png";
G.scene.add(this.box);

@@@

n018=@@@
/
(100,100)

@@@

n019=2486,199
n01a=100004

[s0004]
n001=(bitmap)
n002=S_SET_DATA
n006=S_FORINIT
n007=@@@
 1,P01,-1.5,+1.5
 2,P02,-0.5,+1.5
 3,P03,+0.5,+1.5
 4,P04,+1.5,+1.5
 5,P05,-1.5,+0.5
 6,P06,-0.5,+0.5
 7,P07,+0.5,+0.5
 8,P08,+1.5,+0.5
 9,P09,-1.5,-0.5
10,P10,-0.5,-0.5
11,P11,+0.5,-0.5
12,P12,+1.5,-0.5
13,P13,-1.5,-1.5
14,P14,-0.5,-1.5
15,P15,+0.5,-1.5
16,P16,+1.5,-1.5

@@@

n009=this.itemdata = [];
n00b=@@@
this.itemlist = [
     [[data->@setitem]]
];
@@@

n018=@@@
/
(100,100)

@@@

n019=915,204
n01a=100005

[s0005]
n001=(bitmap)
n002=S_FORINIT
n006=S_GET_ITEM
n009=@@@
this.item = null;
this.I = 0;
@@@

n00b=this.I = 0;
n018=@@@
/
(100,100)

@@@

n019=1155,90
n01a=100006

[s0006]
n001=(bitmap)
n002=S_GET_ITEM
n006=S_LOADTEX
n00b=@@@
this.item = this.itemlist[this.I]
console.log(this.I + "[index:" + this.item.index +" file:" + this.item.file +" xy:(" + this.item.x +"," + this.item.y  +")]");
@@@

n017=nowait
n018=@@@
/
(100,100)

@@@

n019=1155,247
n01a=100007

[s0007]
n001=(bitmap)
n002=S_FORNEXT
n00b=this.I++;
n014=@@@
brifc(S_GET_ITEM);
brelse(S_LOAD_BBTEX);
@@@

n015=@@@
?
?
@@@

n016=@@@
this.I < 16
?
@@@

n017=nowait
n018=@@@
/
(100,100)

@@@

n019=1094,647
n01a=100008

[s0008]
n001=(bitmap)
n002=S_LOADTEX
n006=S_CREATE_PANELS
n007=this.item.file
n009=this.texture = null;
n00b=@@@
this.texture = null;
console.log( "G.datapath=" + G.datapath);
var self = this;
G.loader.load( G.datapath + [[data]], function(texture) {
    self.texture = texture;
    console.log("loaded texture!");
});
@@@

n010=this.texture==null
n018=@@@
/
(100,100)

@@@

n019=1343,240
n01a=100009

[s0009]
n001=(bitmap)
n002=S_CREATE_PANELS
n006=S_CREATE_TOUCHCOL
n009=this.box = null;
n00b=@@@
this.box = new THREE.Mesh(
    new THREE.PlaneGeometry(128, 128),
    new THREE.MeshBasicMaterial({map: this.texture})  // {map: texture}がキモ
);
this.box.position.set(this.item.x * 128, this.item.y * 128, 0);
this.box.name = this.item.name;
G.scene.add(this.box);

@@@

n017=nowait
n018=@@@
/
(100,100)

@@@

n019=1550,239
n01a=100010

[s000a]
n001=(bitmap)
n002=S_WAIT_REQ
n006=S_VAR_TOUCHTEX
n010=this.m_reqcb==null
n018=@@@
/
(100,100)

@@@

n019=82,221
n01a=100011

[s000b]
n001=(bitmap)
n002=S_CB
n006=S_WAIT_REQ
n00b=@@@
this.m_reqcb();
this.m_reqcb=null;
@@@

n018=@@@
/
(100,100)

@@@

n019=2229,679
n01a=100012

[s000c]
n001=(bitmap)
n002=S_LOAD_BBTEX
n003=背面ボードテクスチャ
n005=S_LOADTEX
n006=S_CREATE_BACKBOARD
n007="backboard.png"
n018=@@@
/
(100,100)

@@@

n019=1790,679
n01a=100015

[s000d]
n001=(bitmap)
n002=S_LOAD_TEXTUREX
n006=S_CREATE_BUTTON1
n009=this.texture = null;
n00b=@@@
this.texture = null;
console.log( "G.datapath=" + G.datapath);
var self = this;
G.loader.load( G.datapath + "P01.png", function(texture) {
    self.texture = texture;
    console.log("loaded texture!");
});
@@@

n010=this.texture==null
n018=@@@
/
(100,100)

@@@

n019=2307,192
n01a=100003

[s000e]
n001=(bitmap)
n002=S_WAIT_REQ1
n006=S_WAIT_REQ
n009=this.m_reqcb = null;
n00b=this.m_reqcb = null;
n018=@@@
/
(100,100)

@@@

n019=225,27
n01a=100014

[s000f]
n001=(bitmap)
n002=S_CREATE_BACKBOARD
n006=S_CB
n009=this.box = null;
n00b=@@@
this.box = new THREE.Mesh(
    new THREE.PlaneGeometry(512, 512),
    new THREE.MeshBasicMaterial({map: this.texture})  // {map: texture}がキモ
);
this.box.position.set(0,0,-2);
this.box.name = "backboard";
G.scene.add(this.box);

@@@

n018=@@@
/
(100,100)

@@@

n019=2022,687
n01a=100016

[s0010]
n001=(bitmap)
n002=S_SET_MAPINFO
n006=S_FORNEXT
n00b=@@@
var n_name = 'n' + this.item.index;
G.map_control.set_panel( n_name, this.item.name);
G.map_control.set_panel_pos(n_name,this.item.x * 128, this.item.y * 128);
@@@

n017=nowait
n018=@@@
/
(100,100)

@@@

n019=1981,245
n01a=100017

[s0011]
n001=(bitmap)
n002=S_LOAD_TOCHTEX
n003=@@@
タッチ用テクスチャ
当たり判定用
@@@

n005=S_LOADTEX
n006=S_SET_DATA
n007="Nxx.png"
n012=this.touchtex = this.texture;
n018=@@@
/
(100,100)

@@@

n019=553,193
n01a=100018

[s0012]
n001=(bitmap)
n002=S_VAR_TOUCHTEX
n003=タッチテクスチャ格納用
n006=S_LOAD_TOCHTEX
n009=this.touchtex=null;
n018=@@@
/
(100,100)

@@@

n019=350,219
n01a=100019

[s0013]
n001=(bitmap)
n002=S_CREATE_TOUCHCOL
n003=タッチ検索用パネル
n006=S_SET_MAPINFO
n009=this.box = null;
n00b=@@@
this.box = new THREE.Mesh(
    new THREE.PlaneGeometry(128, 128),
    new THREE.MeshBasicMaterial({map: this.touchtex, transparent: true, opacity: 0   })  // {map: texture}がキモ
);
this.box.position.set(this.item.x * 128, this.item.y * 128, 1);
this.box.name = 'n' + this.item.index;
G.scene.add(this.box);

@@@

n017=nowait
n018=@@@
/
(100,100)

@@@

n019=1755,235
n01a=100020



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2020/06/25 8:14:31
; * pssgEditor version : 0.65.5617.0737256ae72d56e87335f7bfb8f8728597b6ec64
psggfile=@@@
CreatePanelsControl.psgg
@@@
xlsfile=@@@
CreatePanelsControl.xlsx
@@@
guid=@@@
a7e00d9d-8650-4495-a1cb-7e88de8b22e1
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
varied,Edited a state.
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"This is the root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":22,"y":15}},{"Key":"S_END","Value":{"x":2346,"y":519}},{"Key":"S_CREATE_BUTTON1","Value":{"x":2486,"y":199}},{"Key":"S_SET_DATA","Value":{"x":915,"y":204}},{"Key":"S_FORINIT","Value":{"x":1155,"y":90}},{"Key":"S_FORNEXT","Value":{"x":1094,"y":647}},{"Key":"S_GET_ITEM","Value":{"x":1155,"y":247}},{"Key":"S_WAIT_REQ","Value":{"x":82,"y":221}},{"Key":"S_WAIT_REQ1","Value":{"x":225,"y":27}},{"Key":"S_CB","Value":{"x":2229,"y":679}},{"Key":"S_CREATE_PANELS","Value":{"x":1550,"y":239}},{"Key":"S_LOAD_TEXTUREX","Value":{"x":2307,"y":192}},{"Key":"S_LOADTEX","Value":{"x":1343,"y":240}},{"Key":"S_LOAD_BBTEX","Value":{"x":1790,"y":679}},{"Key":"S_CREATE_BACKBOARD","Value":{"x":2022,"y":687}},{"Key":"S_SET_MAPINFO","Value":{"x":1981,"y":245}},{"Key":"S_LOAD_TOCHTEX","Value":{"x":553,"y":193}},{"Key":"S_VAR_TOUCHTEX","Value":{"x":350,"y":219}},{"Key":"S_CREATE_TOUCHCOL","Value":{"x":1755,"y":235}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=0
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=0
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=4
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@

@@@
decoimage_typ_name=@@@
sym
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>
/*
    [[state]]
    [[state-cmt]]
*/
<<<?state/^E_/

[[embed]]

eof>>>
CreatePanelsControl.prototype.[[state]] = function (first) {
    "use strict";
    [[vars]]

    <<<?init
    if (first) {
        [[init]]
    }
    >>>

    [[update]]

    <<<?wait
    if ([[wait]]) { return; }
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if (!this.hasnext()) {
        this.setnext(this.[[nextstate]]);
    }
    >>>


    if (this.hasnext()) {
        <<<?nowait
        this.setnowait();
        >>>
        this.gonext();
    }
};
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=CreatePanelsControl.psgg
xls=CreatePanelsControl.xlsx
gen_src=CreatePanelsControl.js


template_func=template-statefunc.txt

help=help.ini
helpweb=helpweb.html






[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git 0e5d1e482ea7edce6fd0b43d8572377598f3bfc6
@@@







lang=javascript
framework=html5

statemachie=CreatePanelsControl

prefix=CreatePanelsControl
xlsdir=@@@
C:\Users\gea01\Documents\fifteen_puzzle\t1\js\doc
@@@





gendir=@@@
C:\Users\gea01\Documents\fifteen_puzzle\t1\js
@@@





genrdir=..
incrdir=.

code_output_start=[SYN-G-GEN OUTPUT START]
code_output_end=[SYN-G-GEN OUTPUT END]

; This section has macro defines for converting.

; commentline format  {%0} will be replaced to a comment.




[macro]

commentline=// {%0}

@branch=@@@
<<<?"{%0}"/^brifc{0,1}$/
if ([[brcond:{%N}]]) { this.setnext( this.{%1} ); }
>>>
<<<?"{%0}"/^brelseifc{0,1}$/
else if ([[brcond:{%N}]]) { this.setnext( this.{%1} ); }
>>>
<<<?"{%0}"/^brelse$/
else { this.setnext( this.{%1} ); }
>>>
<<<?"{%0}"/^br_/
this.{%0}( this.{%1} );
>>>
@@@




#mems=[[members]]







[jpn]

title=Javascript スタートキット 2018/9/29

detail=@@@
※サンプルプロジェクトを次のＵＲＬより入手可能。
https://github.com/NNNIC/psgg-javascript-sample

Javascript用のステートマシンを作成します。

# ドキュメント用フォルダ
   ステート図ファイルとエディタ起動用ショートカットを格納

      C:\Users\gea01\Documents\fifteen_puzzle\t1\js\doc

  以下のファイルを作成します。

      CreatePanelsControl.pssg     --- エディタで次のエクセルファイルを開く。
      CreatePanelsControl.xlsx     ---  ステート図格納用Excelファイル。エディタが編集。

# ソース用フォルダ
　エディタが生成ソースファイル、ユーザ実装ソースファイル、及び管理クラスファイルを格納

      C:\Users\gea01\Documents\fifteen_puzzle\t1\js

　以下のファイルを作成します。

      CreatePanelsControl.js       --- Excelファイルからの変換ソースコードを挿入。

注意 : 既に同名のファイルがある場合は生成されません。
　　　 削除してから生成してください。


@@@










[en]

title=Javascript STARTER KIT 2018/9/29

detail=@@@
This dialog will create files for a state machine.

* You may get the sample project from the below url.
https://github.com/NNNIC/psgg-javascript-sample

# Document Folder
      This folder will contain a state chart file and the shortcut of the editor.

      C:\Users\gea01\Documents\fifteen_puzzle\t1\js\doc

  File:

      CreatePanelsControl.pssg  --- The editor opens the below excel file.
      CreatePanelsControl.xlsx  --- Excel File. the editor edits this file

# Source Folder
       This folder will contain a source file generated by the editor, a user implemetation source file, and a manager source file.

      C:\Users\gea01\Documents\fifteen_puzzle\t1\js

　File:

      CreatePanelsControl.js       -- The editor will convert from the excel file into this file.

NOTE : If the same name files exists, the file will not be created.
       Please delete the same name files ahead of the creation.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
; -----
; 項目説明
; -----

[state]
jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@
en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[thumbnail]
jpn=@@@
説明用のイメージを指定する。
@@@
en=@@@
Specify a image for explanation of this state.
@@@

[init]
jpn=@@@
初期化用処理を指定する。
@@@
en=@@@
Specify a initial process.
@@@

[update]
jpn=@@@
更新処理を指定する。
@@@
en=@@@
Specify a update process.
@@@

[wait]
jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@
en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[post_wait]
jpn=@@@
'wait'後の処理を指定する。
@@@
en=@@@
Specify the post process after 'wait'.
@@@

[branch]
jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@
en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[nextstate]
jpn=@@@
次に実行するステートを指定する。
@@@
en=@@@
Specify the next state to be executed.
@@@

[nowait]
jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@
en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[!dir]
jpn=@@@
システムがステートのディレクトリ指定に使用。
@@@
en=@@@
System uses this for the directory path of the state.
@@@

[!uuid]
jpn=@@@
システムがステートのuuid指定に使用。
@@@
en=@@@
System uses this for the uuid of the state.
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
state-ref=
wait=
wait-cmt=
embed=
data=
branch=
!dir=
post_wait-cmt=
nowait=
members=
thumbnail=
update-cmt=
post_wait=
state-cmt=
!pos=
!uuid=
nextstate=
state=
S_=
brcond=
update=
init-cmt=
basestate=
vars=
C_=
E_=
init-ref=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,S0
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
basestate=read_only,exclusion,(S0)
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


